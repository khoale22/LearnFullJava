<?xml version="1.0"?>
<ruleset name="PMRuleset"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

    <description>PMD Rule Set</description>

    <rule ref="category/java/bestpractices.xml">
        <exclude name="PreserveStackTrace" />
        <exclude name="GuardLogStatement" />
    </rule>
    <rule ref="category/java/codestyle.xml">
        <exclude name="AtLeastOneConstructor" />
        <exclude name="ConfusingTernary" />
        <exclude name="LocalVariableCouldBeFinal" />
        <exclude name="LongVariable" />
        <exclude name="MethodArgumentCouldBeFinal" />
        <exclude name="OnlyOneReturn" />
        <exclude name="ShortClassName" />
        <exclude name="ShortMethodName" />
        <exclude name="ShortVariable" />
    </rule>
    <rule ref="category/java/codestyle.xml/FieldNamingConventions">
        <properties>
            <property name="exclusions" value="serialVersionUID|logger|versions|objectMapper" />
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/LinguisticNaming">
        <properties>
            <property name="checkSetters" value="false" />
        </properties>
    </rule>

    <rule ref="category/java/design.xml">
        <exclude name="AvoidCatchingGenericException" />
        <exclude name="AvoidThrowingRawExceptionTypes" />
        <exclude name="DataClass" />
        <exclude name="SignatureDeclareThrowsException" />
        <!-- I hate to remove the Law of Demeter rule, as I generally think it is good, but -->
        <!-- so many of the frameworks (including ours) rely on the builder pattern, and that -->
        <!-- triggers this rule and creates too much noise. -->
        <exclude name="LawOfDemeter" />
        <exclude name="CyclomaticComplexity" />
    </rule>

    // TODO refactor VendorDataValidator to remove this rule
    <rule ref="category/java/design.xml/NPathComplexity">
        <properties>
            <!--Ignore on class-->
            <property name="violationSuppressXPath" value="//ClassOrInterfaceDeclaration['VendorDataValidator']"/>
        </properties>
    </rule>
    <rule ref="category/java/design.xml/TooManyFields">
        <properties>
            <property name="maxfields" value="20" />
        </properties>
    </rule>
    <rule ref="category/java/design.xml/TooManyMethods">
        <properties>
            <property name="maxmethods" value="20" />
        </properties>
    </rule>
    <rule ref="category/java/design.xml/LoosePackageCoupling">
        <properties>
            <property name="packages"  value="com.heb" />
        </properties>
    </rule>

    <rule ref="category/java/documentation.xml"/>
    <rule ref="category/java/documentation.xml/CommentSize">
        <properties>
            <property name="maxLineLength" value="206" />
            <property name="maxLines" value="30" />
        </properties>
    </rule>

    <rule ref="category/java/documentation.xml/CommentRequired">
        <properties>
            <property name="fieldCommentRequirement" value="Ignored" />
        </properties>
    </rule>


    <rule ref="category/java/errorprone.xml">
        <exclude name="DataflowAnomalyAnalysis" />
    </rule>
    <rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals" >
        <properties>
            <property name="skipAnnotations" value="true" />
        </properties>
    </rule>

    <rule ref="category/java/multithreading.xml"/>
    <rule ref="category/java/performance.xml">
        <exclude name="AvoidInstantiatingObjectsInLoops" />
    </rule>


    <rule ref="category/java/codestyle.xml/ClassNamingConventions">
        <properties>
            <property name="utilityClassPattern" value="[A-Z][a-zA-Z0-9]*"/> <!-- I don't like the rule about utility class naming. -->
        </properties>
    </rule>

    <!-- This has all the 'this should be final' rules, which I like but we need to agree to. -->
    <!--<rule ref="rulesets/java/optimizations.xml" />-->

    <!-- This has all the don't catch generic exception rules, which I don't like but we need to agree to. -->
    <!--<rule ref="rulesets/java/strictexception.xml" />-->
</ruleset>
